a6 Release 7/29/2019
------------------------
New features:
=========================
1. Introduce new option "interval_scale"
   This option helps to adjust the sleeping interval in scan stage.
   You can use this option to scale up/down the "HOT pages scan target" in each scan,
   to influence the sleeping interval one more step.
   The relationship of scan interval and "HOT pages scan target":
   More larger "HOT pages scan target", more larger scan interval, vice versa.
   The "interval_scale" is an percent value, for example:
       85: Means scale down the "HOT pages scan target" to 85% of its original value.
      400: Means scale up the "HOT pages scan target" to 4 times of its original value.
   The default value is 100

Issue fixed:
=========================
None

Improvement:
=========================
None


a5 Release 7/23/2019
------------------------
New features:
=========================
None

Issue fixed:
=========================
None

Improvement:
=========================
1. Changed the auto-interval adjustment target to 4 times of option.one_period_migration_size.
   This helps to reduce overheads and improve the HOT/COLD page accuracy.

a4 Release 7/11/2019
------------------------

New features:
=========================
None

Issue fixed:
=========================
1. rate limitation feature can't doesn't work.

Improvement:
=========================
1. More better ratio control in exit on converged mode.
2. More better support when sys-refs work in multi-threading mode.
3. Adjusted anti-thrashing algorithm to avoid skipping top hot pages incorrectly.
4. Better stats log output for tuning.
5. Change to use one period migration size as auto-interval adjustment target.


a3 Release 6/24/2019
------------------------

New features
=========================
1:1 user space migration feature enabled in this release.
This feature does HOT/COLD migration in interleave mode, that is, prmote hot pages then demote same number of cold pages. It helps to provide better ratio control and
decrease the memory pressure of page migration. Now any initial ratio is supported including pure DRAM or pure AEP.
This migration feature adjusts DRAM target ratio in higher priority, it adjusts the page distribution among DRAM and PMEM to reach target ratio firstly,
then starts "1:1" migaration to reach best page distribution by hotness.

The increment kernel patches
=============================
We only provide the increment kernel patches since last release to reduce user's overheads. User just apply new patches instead of re-setup from scratch.


New Config options
===================
exit_on_converged:
Enable "converged mode", the tool will exit when converged condition matched, it will not run as a daemon to run forever,
to enable "daemon mode" please set this to false.
We suggest to use this when you want to assess the benefit from using this tool with specific workload.
Please refer GlobalScan::exit_on_converged() in file GlobalScan.cc to know the details of the converged condition.

anti_thrash_threshold:
It's the refcount gap between hot page threshold and cold page threshold, default suggested value is 2.
More bigger more easier to trigger the anti-thrashing protection, the "minimum hot page reference threshold" will be changed
to  "minimum hot page reference threshold + anti_thrash_threshold" by the protection, and sys-refs will skip the migration if
the thrashing is still exist even after applied the protection.


one_period_migration_size:
The migration size in one period in KB unit, apply to all page size. The default suggested value is 256MB.

An overview of nr_scans/nr_scan_rounds/scan_period:

Loop:
    Scan window 1       (A)  # A period start at this point
        Scan 1
        Auto-interval sleeping
        Scan 2
        Auto-interval sleeping
        ....
        Scan nr_scans   (B)

    Sleep for stable hot page  # scan_period - time cost from (A) to (B)

    Scan window 2
    ...
    Scan window 3
    ...
    Scan window nr_scans_rounds         (C)

    Do migration.                       (D)

    Sleep for control overhead  # scan_period - time cost from (C) to (D)


You can see 2 phase here:
The (A) to (C) is SCAN phase.
The (C) to (D) is MIGRATION phase.

So:
Total scan window count = nr_scan_rounds.
Total scan count in one scan window = nr_scans.
Total scan count in one period = nr_scans * nr_scan_rounds.
Sleeping for stable hot page = scan_period - time cost of a scan window.
Sleeping for control overhead = scan_period - time cost of a scan window - time cost of migration.


nr_scans:
The total scan count in one scan window, The default suggested value depends on the page size and workload,
we now use 10 for 4K page size and 4 for 2M page size.
The bigger nr_scans value can help to increase the scan accuracy, but also increase the time cost of scan phase,
and decrease the HOT/COLD pages convergence speed which may decrease overall performance of workload further

nr_scan_rounds:
The total scan window in one period before start to migration, the default suggested value depends on
the page size and workload, we now use 2 for 4K page size and 5 for 2M page size.
More bigger more easier to filter out the "unstable" HOT pages, but increase the time cost of SCAN phase
and decrease the HOT/COLD pages convergence speed which may decrease overall performance of workload further

scan_period:
The time slice for SCAN phase and MIGRATION phase in one period, in second unit.
The default suggested value depends on page size and workload, we now use 20 for 4K page size and 1 for 2M page size.
This is a lower bound setting, so it will be ignored if the total time cost of  SCAN phase or MIGRATION phase is longer
than this setting.
More bigger more easier to filter out the "unstable" HOT pages and decrease the overhead(CPU usage),
but increase the time cost of SCAN and MIGRATION phase and decrease the HOT/COLD pages convergence
speed which may decrease overall performance of workload further.
Suggest to increase this value if you want to decrease overhead of sys-refs.
Please note that scan_period should be larger than the workload cold page access interval,
so that we can effectively detect the cold pages.
